/**
 * This file was generated by the JPA Modeler
 */
package Entities;

import oyei.SUMS.Registration.entities.Person;
import syafiqah.SUMS.Allocation.Entities.ShortList;
import java.io.Serializable;
import java.util.List;
import javax.persistence.*;

/**
 * @author a
 */
@Entity
@NamedQueries({
    @NamedQuery(name="Student.ByProject", query="SELECT s FROM Student s where s.finalProject.id IS NOT NULL"),
    @NamedQuery(name="Student.exmpleStudentID", query="SELECT s FROM Student s"),
    @NamedQuery(name="Student.getByProject", query="SELECT s FROM Student s JOIN s.shortLists sl WHERE sl.finalProject.id = :value1")
})
public class Student implements Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Basic
    private String StudentNumber;

    @OneToOne(targetEntity = Person.class)
    private Person person;

    @OneToOne(targetEntity = FinalProject.class)
    private FinalProject finalProject;

    @OneToMany(targetEntity = ShortList.class)
    /*
    Another foreign key naming clash, this time over "STDNTSHRTLSTSTDNTD". Using traditional join column instead, as a quick solution.
    See FinalProject.milestones field for further details.
    */
    @JoinColumn
    private List<ShortList> shortLists;
    
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getStudentNumber() {
        return this.StudentNumber;
    }

    public void setStudentNumber(String StudentNumber) {
        this.StudentNumber = StudentNumber;
    }

    public Person getPerson() {
        return this.person;
    }

    public void setPerson(Person person) {
        this.person = person;
    }

    public FinalProject getFinalProject() {
        return this.finalProject;
    }

    public void setFinalProject(FinalProject finalProject) {
        this.finalProject = finalProject;
    }
    

    public List<ShortList> getShortLists() {
        return this.shortLists;
    }

    public void setShortLists(List<ShortList> shortLists) {
        this.shortLists = shortLists;
    }
  
}
