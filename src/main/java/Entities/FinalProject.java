/**
 * This file was generated by the JPA Modeler
 */
package Entities;

import ramazan.SUMS.Monitoring.entities.MilestoneFeedback;
import ramazan.SUMS.Monitoring.entities.Milestone;
import jinet.SUMS.Marking.Entities.Grade;
import jinet.SUMS.Marking.Entities.GradeUpdate;
import uk.ac.port.SUMS.ProjectIdeas.model.ProjectIdea;
import java.io.Serializable;
import java.util.List;
import javax.persistence.*;

/**
 * @author a
 */
@Entity
@NamedQueries({
    @NamedQuery(name="ProjectIdea.Approved",query=
    "SELECT PI FROM ProjectIdea PI where (PI.Status=uk.ac.port.SUMS.ProjectIdeas.model.ProjectIdea.Statuses.Approved) Order by PI.SubmissionDate DESC,PI.Title ASC"),
    @NamedQuery(name="FinalProject.All", query= "SELECT fp FROM FinalProject fp"),
    @NamedQuery(name="FindProject.Search", query = "SELECT fp FROM FinalProject fp WHERE UPPER(fp.idea.Title) LIKE UPPER(:searchKeyword) escape '\\'"),
    @NamedQuery(name="FinalProject.Approved", query = "SELECT fp FROM FinalProject fp WHERE fp.idea.Status = uk.ac.port.SUMS.ProjectIdeas.model.ProjectIdea.Statuses.Approved")
})
 

public class FinalProject implements Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @OneToOne(targetEntity = ProjectIdea.class)
    private ProjectIdea idea;

    @OneToMany(targetEntity = ProjectFeedback.class)
    private List<ProjectFeedback> feedbacks;

    @OneToMany(targetEntity = Milestone.class)
    
    @OneToOne(targetEntity = Grade.class)
    /*
    JPA metadata generation of the join table is resulting in a foreign key name clash over the name "FNLPRJCTMFNLPRJCTD",
    also used as a foreign key name for the join table of the FinalProject.marks association;
    using a traditional join column instead
    */
    @JoinColumn
    private List<Milestone> milestones;
    
    @JoinColumn
    private List<Grade> grades;

    @OneToMany(targetEntity = Mark.class)
    private List<Mark> marks;

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public ProjectIdea getIdea() {
        return idea;
    }

    public void setIdea(ProjectIdea idea) {
        this.idea = idea;
    }
    public List<ProjectFeedback> getFeedbacks() {
        return this.feedbacks;
    }

    public void setFeedbacks(List<ProjectFeedback> feedbacks) {
        this.feedbacks = feedbacks;
    }

    public List<Milestone> getMilestones() {
        return this.milestones;
    }

    public void setMilestones(List<Milestone> milestones) {
        this.milestones = milestones;
    }
    
     public List<Grade> getGrades() {
        return this.grades;
    }

    public void setGrades(List<Grade> grades) {
        this.grades = grades;
    }

    public List<Mark> getMarks() {
        return this.marks;
    }

    public void setMarks(List<Mark> marks) {
        this.marks = marks;
    }

}
